/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/healthz": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Healthcheck */
        get: operations["healthcheck_healthz_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Root */
        get: operations["read_root__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Register */
        post: operations["register_auth_register_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Login */
        post: operations["login_auth_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Me */
        get: operations["get_me_me_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/company-roles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Assign Company Role */
        post: operations["assign_company_role_company_roles_post"];
        /** Remove Company Role */
        delete: operations["remove_company_role_company_roles_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/companies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Company */
        post: operations["create_company_companies_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/companies/{company_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Company */
        get: operations["get_company_companies__company_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update Company */
        patch: operations["update_company_companies__company_id__patch"];
        trace?: never;
    };
    "/carriers/profile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get My Carrier Profile */
        get: operations["get_my_carrier_profile_carriers_profile_get"];
        put?: never;
        /** Upsert Carrier Profile */
        post: operations["upsert_carrier_profile_carriers_profile_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/lots": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Lots */
        get: operations["list_lots_lots_get"];
        put?: never;
        /** Create Lot */
        post: operations["create_lot_lots_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/lots/{lot_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Lot */
        get: operations["get_lot_lots__lot_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update Lot Status */
        patch: operations["update_lot_status_lots__lot_id__patch"];
        trace?: never;
    };
    "/lots/{lot_id}/photos": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add Lot Photo */
        post: operations["add_lot_photo_lots__lot_id__photos_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/lots/{lot_id}/props": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add Lot Prop */
        post: operations["add_lot_prop_lots__lot_id__props_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Offer */
        post: operations["create_offer_offers_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{offer_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update Offer Status */
        patch: operations["update_offer_status_offers__offer_id__patch"];
        trace?: never;
    };
    "/allocations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Allocation Fixed */
        post: operations["create_allocation_fixed_allocations_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/allocations/{allocation_id}/cancel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Cancel Allocation */
        patch: operations["cancel_allocation_allocations__allocation_id__cancel_patch"];
        trace?: never;
    };
    "/payments/hold": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Payment Hold */
        post: operations["payment_hold_payments_hold_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/payments/release": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Payment Release */
        post: operations["payment_release_payments_release_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/deals/{deal_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Deal */
        get: operations["get_deal_deals__deal_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/allocations/{allocation_id}/deal": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Deal By Allocation */
        get: operations["get_deal_by_allocation_allocations__allocation_id__deal_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipments/quote": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Shipment Quote */
        post: operations["shipment_quote_shipments_quote_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Shipment */
        post: operations["create_shipment_shipments_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipments/{shipment_id}/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update Shipment Status */
        patch: operations["update_shipment_status_shipments__shipment_id__status_patch"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** AllocationCancel */
        AllocationCancel: {
            /** Reason */
            reason?: string | null;
        };
        /** AllocationCreateFixed */
        AllocationCreateFixed: {
            /** Lot Id */
            lot_id: number;
            /** Qty Kg */
            qty_kg: number;
        };
        /** AllocationOut */
        AllocationOut: {
            /** Id */
            id: number;
            /** Lot Id */
            lot_id: number;
            /** Buyer Company Id */
            buyer_company_id: number;
            /** Mode */
            mode: string;
            /** Qty Kg */
            qty_kg: number;
            /** Unit Price Per Ton */
            unit_price_per_ton: number | null;
            /**
             * Reserved Until
             * Format: date-time
             */
            reserved_until: string;
            /** Status */
            status: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** CarrierProfileCreate */
        CarrierProfileCreate: {
            /** Vehicle Plate */
            vehicle_plate?: string | null;
            /** Capacity Kg */
            capacity_kg?: number | null;
        };
        /** CarrierProfileOut */
        CarrierProfileOut: {
            /** Id */
            id: number;
            /** User Id */
            user_id: number;
            /** Vehicle Plate */
            vehicle_plate: string | null;
            /** Capacity Kg */
            capacity_kg: number | null;
            /** Active */
            active: boolean;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** CompanyCreate */
        CompanyCreate: {
            /** Name */
            name: string;
            /** City */
            city?: string | null;
        };
        /** CompanyOut */
        CompanyOut: {
            /** Name */
            name: string;
            /** City */
            city?: string | null;
            /** Id */
            id: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** CompanyRoleAssign */
        CompanyRoleAssign: {
            /** User Id */
            user_id: number;
            /** Company Id */
            company_id: number;
            /**
             * Role
             * @enum {string}
             */
            role: "GEN" | "REC" | "CARRIER" | "ADMIN";
        };
        /** CompanyRoleOut */
        CompanyRoleOut: {
            /** Id */
            id: number;
            /** User Id */
            user_id: number;
            /** Company Id */
            company_id: number;
            /**
             * Role
             * @enum {string}
             */
            role: "GEN" | "REC" | "CARRIER" | "ADMIN";
        };
        /** CompanyRoleRemove */
        CompanyRoleRemove: {
            /** User Id */
            user_id: number;
            /** Company Id */
            company_id: number;
            /**
             * Role
             * @enum {string}
             */
            role: "GEN" | "REC" | "CARRIER" | "ADMIN";
        };
        /** CompanyUpdate */
        CompanyUpdate: {
            /** Name */
            name?: string | null;
            /** City */
            city?: string | null;
        };
        /** DealOut */
        DealOut: {
            /** Id */
            id: number;
            /** Allocation Id */
            allocation_id: number;
            /** Qty Kg */
            qty_kg: number;
            /** Unit Price Per Ton */
            unit_price_per_ton: number;
            /** Subtotal Amount */
            subtotal_amount: number;
            /** Sale Fee Amount */
            sale_fee_amount: number;
            /** Transport Fee Amount */
            transport_fee_amount: number;
            /** Status */
            status: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** LotCreate */
        LotCreate: {
            /** Material */
            material: string;
            /** City */
            city?: string | null;
            /**
             * Price Mode
             * @default fixed
             * @enum {string}
             */
            price_mode: "fixed" | "negotiable";
            /** Unit Price Per Ton */
            unit_price_per_ton?: number | null;
            /**
             * Allow Partial
             * @default false
             */
            allow_partial: boolean;
            /** Min Chunk Kg */
            min_chunk_kg?: number | null;
            /** Step Kg */
            step_kg?: number | null;
            /** Total Qty Kg */
            total_qty_kg: number;
            /**
             * Reserve Ttl Minutes
             * @default 60
             */
            reserve_ttl_minutes: number;
        };
        /** LotOut */
        LotOut: {
            /** Id */
            id: number;
            /** Material */
            material: string;
            /** City */
            city: string | null;
            /**
             * Price Mode
             * @enum {string}
             */
            price_mode: "fixed" | "negotiable";
            /** Unit Price Per Ton */
            unit_price_per_ton: number | null;
            /** Allow Partial */
            allow_partial: boolean;
            /** Min Chunk Kg */
            min_chunk_kg: number | null;
            /** Step Kg */
            step_kg: number | null;
            /** Total Qty Kg */
            total_qty_kg: number;
            /** Available Qty Kg */
            available_qty_kg: number;
            /** Reserve Ttl Minutes */
            reserve_ttl_minutes: number;
            /** Status */
            status: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** LotPhotoCreate */
        LotPhotoCreate: {
            /** Url */
            url: string;
        };
        /** LotPropCreate */
        LotPropCreate: {
            /** Key */
            key: string;
            /** Value */
            value: string;
        };
        /** LotStatusUpdate */
        LotStatusUpdate: {
            /**
             * Action
             * @enum {string}
             */
            action: "cancel" | "expire";
        };
        /** OfferCreate */
        OfferCreate: {
            /** Lot Id */
            lot_id: number;
            /** Price Per Ton */
            price_per_ton: number;
            /** Qty Kg Optional */
            qty_kg_optional?: number | null;
        };
        /** OfferOut */
        OfferOut: {
            /** Id */
            id: number;
            /** Lot Id */
            lot_id: number;
            /** Buyer Company Id */
            buyer_company_id: number;
            /** Price Per Ton */
            price_per_ton: number;
            /** Qty Kg Optional */
            qty_kg_optional: number | null;
            /** Status */
            status: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** OfferStatusUpdate */
        OfferStatusUpdate: {
            /**
             * Action
             * @enum {string}
             */
            action: "accept" | "reject";
        };
        /** PaymentActionRequest */
        PaymentActionRequest: {
            /** Payment Id */
            payment_id: number;
        };
        /** PaymentHoldRequest */
        PaymentHoldRequest: {
            /** Allocation Id */
            allocation_id: number;
        };
        /** PaymentOut */
        PaymentOut: {
            /** Id */
            id: number;
            /** Allocation Id */
            allocation_id: number;
            /** Amount */
            amount: number;
            /** Status */
            status: string;
        };
        /** RegisterOut */
        RegisterOut: {
            /** Id */
            id: number;
            /** Token */
            token: string;
        };
        /** ShipmentCreate */
        ShipmentCreate: {
            /** Deal Id */
            deal_id: number;
            /** Carrier Company Id */
            carrier_company_id: number;
        };
        /** ShipmentOut */
        ShipmentOut: {
            /** Id */
            id: number;
            /** Deal Id */
            deal_id: number;
            /** Carrier Company Id */
            carrier_company_id: number;
            /** Status */
            status: string;
            /** Km Est */
            km_est: number | null;
            /** Quoted Cost */
            quoted_cost: number | null;
            /** Eta At */
            eta_at: string | null;
            /** Final Cost */
            final_cost: number | null;
        };
        /** ShipmentQuoteOut */
        ShipmentQuoteOut: {
            /** Km Est */
            km_est: number;
            /** Quoted Cost */
            quoted_cost: number;
            /**
             * Eta At
             * Format: date-time
             */
            eta_at: string;
        };
        /** ShipmentQuoteRequest */
        ShipmentQuoteRequest: {
            /** Deal Id */
            deal_id: number;
        };
        /** ShipmentStatusUpdate */
        ShipmentStatusUpdate: {
            /**
             * Status
             * @enum {string}
             */
            status: "assigned" | "picked" | "in_transit" | "delivered";
            /** Final Cost */
            final_cost?: number | null;
        };
        /** TokenOut */
        TokenOut: {
            /** Token */
            token: string;
        };
        /** UserCreate */
        UserCreate: {
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Password */
            password: string;
            /**
             * Role Global
             * @default GEN
             * @enum {string}
             */
            role_global: "GEN" | "REC" | "CARRIER" | "ADMIN";
            /** Company Id */
            company_id?: number | null;
            /** Company Name */
            company_name?: string | null;
            /** Company City */
            company_city?: string | null;
        };
        /** UserLogin */
        UserLogin: {
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Password */
            password: string;
        };
        /** UserOut */
        UserOut: {
            /** Id */
            id: number;
            /**
             * Email
             * Format: email
             */
            email: string;
            /**
             * Role Global
             * @enum {string}
             */
            role_global: "GEN" | "REC" | "CARRIER" | "ADMIN";
            /** Company Id */
            company_id: number | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    healthcheck_healthz_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    read_root__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    register_auth_register_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RegisterOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    login_auth_login_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserLogin"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_me_me_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserOut"];
                };
            };
        };
    };
    assign_company_role_company_roles_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CompanyRoleAssign"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyRoleOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    remove_company_role_company_roles_delete: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CompanyRoleRemove"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_company_companies_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CompanyCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_company_companies__company_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                company_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_company_companies__company_id__patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                company_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CompanyUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_my_carrier_profile_carriers_profile_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CarrierProfileOut"];
                };
            };
        };
    };
    upsert_carrier_profile_carriers_profile_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CarrierProfileCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CarrierProfileOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_lots_lots_get: {
        parameters: {
            query?: {
                material?: string | null;
                city?: string | null;
                status?: string | null;
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LotOut"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_lot_lots_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LotCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LotOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_lot_lots__lot_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                lot_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LotOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_lot_status_lots__lot_id__patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                lot_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LotStatusUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LotOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    add_lot_photo_lots__lot_id__photos_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                lot_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LotPhotoCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    add_lot_prop_lots__lot_id__props_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                lot_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LotPropCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_offer_offers_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OfferCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OfferOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_offer_status_offers__offer_id__patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                offer_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OfferStatusUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OfferOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_allocation_fixed_allocations_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AllocationCreateFixed"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AllocationOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    cancel_allocation_allocations__allocation_id__cancel_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                allocation_id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["AllocationCancel"] | null;
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AllocationOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    payment_hold_payments_hold_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PaymentHoldRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaymentOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    payment_release_payments_release_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PaymentActionRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaymentOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_deal_deals__deal_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                deal_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DealOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_deal_by_allocation_allocations__allocation_id__deal_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                allocation_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DealOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    shipment_quote_shipments_quote_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ShipmentQuoteRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShipmentQuoteOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_shipment_shipments_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ShipmentCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShipmentOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_shipment_status_shipments__shipment_id__status_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                shipment_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ShipmentStatusUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShipmentOut"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
